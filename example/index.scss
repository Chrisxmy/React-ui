html, body, #root {
  height: 100%;
  margin: 0;
  padding: 0;
  line-height: 1.5;
}

ul, h3,p,pre  {
  margin: 0;
  padding: 0
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

a {
  text-decoration: none;
}

li {
  list-style: none;
}

pre {
  font-family: monospace, sans-serif, "PingFang SC";
  font-size: 14px;
  padding: 10px;
  border-radius: 2px;
}

.demo-component {
  border: 1px solid #d9d9d9;
  margin-bottom: 20px;
  border-radius: 2px;
  width:60%;
  &__describe {
    position: relative;
    padding: 20px 20px 0px 20px;
    display: flex;
    justify-content: space-between;
    margin-bottom: 12px;
  }
  &__title{
    position: absolute;
    top: -14px;
    left:20px;
    background: #fff;
    padding: 0 .3em
  }
  &__content{
    font-size: 12px;
  }
  &__view{
    padding: 40px;
    border-bottom: 1px solid #d9d9d9;;
  }
  &__toggle {
    cursor: pointer;
  }
}

.x-example {
  height: 100%;
  &__header {
    position: fixed;
    top:0;
    left:0;
    right:0;
    z-index: 99;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px 20px;
    box-shadow: 0 2px 8px #f0f1f2;
    color: #000;
    background: #fff;
    .left {
      display: flex;
      align-items: center;
    }
    .right {
      cursor: pointer;
    }
    h3 {
      margin-left: 12px;
    }
  }
  .main {
    height: 100%;
    padding-top: 68px;
  }
  .aside {
    position: fixed;
    left:0;
    flex-basis: 200px;
    height: 100%;
    background: #fff;
    border-right: 1px solid #e8e8e8;
    .link {
      color: #000;
      display: inline-block;
      width: 200px;
      padding: 10px 0 10px 20px;
      &:hover {
        color: #1890ff
      }
    }
    .link-active {
      background: #e6f7ff;
      color: #1890ff;
      border-right: 4px solid #1890ff;
    }
  }
  .content {
    flex: 1;
    margin-left: 200px;
    padding:20px 60px 60px 60px;
  }
}

.x-layout-demo {
  color: #fff;
  text-align: center;
  &-header {
    background: #7dbcea;
    padding: 20px 0
  }
  &-content {
    background: rgba(16, 142, 233, 1);
    padding: 20px 0
  }
  &-footer {
    background: #7dbcea;
    padding: 20px 0
  }
  &-aside {
    background: #3ba0e9;
    padding: 0 20px
  }
}

.x-buttton-demo {
  button {
    margin-right: 10px;
  }
}

.x-icon-example {
  & > span {
    margin-right: 20px;
  }
}


.x-infiniteScroll-demo{
  p{
    text-align: center;
    background: #e8f3fe;
    color:#7dbcfc;
    padding:10px 0;
    margin-top: 10px;
  }
}

@mixin thinBorder($directionMaps: bottom, $color: #ccc, $radius:(0, 0, 0, 0), $position: after) {
  // 是否只有一个方向
  $isOnlyOneDir: string==type-of($directionMaps);

  @if ($isOnlyOneDir) {
      $directionMaps: ($directionMaps);
  }

  @each $directionMap in $directionMaps {
      border-#{$directionMap}: 1px solid $color;
  }

  // 判断圆角是list还是number
  @if(list==type-of($radius)) {
      border-radius: nth($radius, 1) nth($radius, 2) nth($radius, 3) nth($radius, 4);
  }

  @else {
      border-radius: $radius;
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 2) {
      & {
          position: relative;

          // 删除1像素密度比下的边框
          @each $directionMap in $directionMaps {
              border-#{$directionMap}: none;
          }
      }

      &:#{$position} {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          display: block;
          width: 200%;
          height: 200%;
          transform: scale(0.5);
          box-sizing: border-box;
          padding: 1px;
          transform-origin: 0 0;
          pointer-events: none;
          border: 0 solid $color;

          @each $directionMap in $directionMaps {
              border-#{$directionMap}-width: 1px;
          }

          // 判断圆角是list还是number
          @if(list==type-of($radius)) {
              border-radius: nth($radius, 1)*2 nth($radius, 2)*2 nth($radius, 3)*2 nth($radius, 4)*2;
          }

          @else {
              border-radius: $radius*2;
          }

      }
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 3) {
      &:#{$position} {

          // 判断圆角是list还是number
          @if(list==type-of($radius)) {
              border-radius: nth($radius, 1)*3 nth($radius, 2)*3 nth($radius, 3)*3 nth($radius, 4)*3;
          }

          @else {
              border-radius: $radius*3;
          }

          width: 300%;
          height: 300%;
          transform: scale(0.3333);
      }
  }
}

.border{
  border-bottom: 1px solid #ccc
}

.border2{
  @include thinBorder()
}





